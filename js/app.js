// get all the value
function getInput(idInput) {
    const inputValue = document.getElementById(idInput).value;
    return parseFloat(inputValue);
}
// calculate total expenses & balance
document.getElementById('calculate-btn').addEventListener('click', function () {
    const incomeInput = getInput('income-input');
    const foodInput = getInput('food-input');
    const rentInput = getInput('rent-input');
    const utilityInput = getInput('utility-input');
    const othersInput = getInput('others-input');
    const total = foodInput + rentInput + othersInput + utilityInput;
    // calculate button error handling

    if (isNaN(total)) {
        return Swal.fire({
            icon: "error",
            title: "‡¶ï‡¶ø‡¶∞‡ßá...",
            html: "‡¶ï‡¶ø‡¶õ‡ßÅ ‡¶®‡¶æ ‡¶≤‡¶ø‡¶ñ‡ßá‡¶á ‡¶π‡¶ø‡¶∏‡¶æ‡¶¨ ‡¶ï‡¶∞‡¶§‡ßá ‡¶ö‡¶æ‡¶á‡¶õ‡¶ø‡¶∏?üòÜ",
          });
    } else if (total > incomeInput) {
        return Swal.fire({
            icon: "error",
            html: "‡¶Ü‡ßü ‡¶¨‡ßÅ‡¶ù‡ßá ‡¶¨‡ßç‡¶Ø‡ßü ‡¶ï‡¶∞",
          });
    }
    else if (incomeInput < 0) {
        return Swal.fire({
            icon: "error",
            html: "<b>‡¶Ü‡ßü‡ßá‡¶∞</b> ‡¶™‡¶∞‡¶ø‡¶Æ‡¶æ‡¶£ ‡¶ï‡¶ø ‡¶®‡ßá‡¶ó‡ßá‡¶ü‡¶ø‡¶≠ ‡¶π‡ßü?",
          });
    }
    else if (foodInput < 0) {
        return Swal.fire({
            icon: "error",
            html: "<b>‡¶ñ‡¶æ‡¶¨‡¶æ‡¶∞ ‡¶ñ‡¶∞‡¶ö</b> ‡¶ï‡¶ø ‡¶®‡ßá‡¶ó‡ßá‡¶ü‡¶ø‡¶≠ ‡¶π‡ßü?",
          });
    }
    else if (rentInput < 0 ) {
        return Swal.fire({
            icon: "error",
            html: "<b>‡¶¨‡¶æ‡ßú‡¶ø ‡¶≠‡¶æ‡ßú‡¶æ</b> ‡¶ï‡¶ø ‡¶®‡ßá‡¶ó‡ßá‡¶ü‡¶ø‡¶≠ ‡¶π‡ßü?",
          });
    }
    else if (utilityInput < 0 ) {
        return Swal.fire({
            icon: "error",
            html: "<b>‡¶á‡¶â‡¶ü‡¶ø‡¶≤‡¶ø‡¶ü‡¶ø ‡¶¨‡¶ø‡¶≤‡ßá‡¶∞</b> ‡¶™‡¶∞‡¶ø‡¶Æ‡¶æ‡¶£ ‡¶ï‡¶ø ‡¶®‡ßá‡¶ó‡ßá‡¶ü‡¶ø‡¶≠ ‡¶π‡ßü?",
          });
    }
    else if (othersInput < 0 ) {
        return Swal.fire({
            icon: "error",
            html: "<b>‡¶Ö‡¶®‡ßç‡¶Ø‡¶æ‡¶®‡ßç‡¶Ø ‡¶ñ‡¶∞‡¶ö</b> ‡¶ï‡¶ø ‡¶®‡ßá‡¶ó‡ßá‡¶ü‡¶ø‡¶≠ ‡¶π‡ßü?",
          });
    }
     else {
        const totalExpenses = document.getElementById('total-expenses');
        totalExpenses.innerText = total;
        const totalBalance = document.getElementById('balance');
        totalBalance.innerText = incomeInput - parseInt(totalExpenses.innerText);
    }
    reset('income-input');
});
// calculate save money part
function saveMoney() {
    let balance = document.getElementById('balance');
    const incomeInput = getInput('income-input');
    const saveMoneyInput = getInput('save-money-input');
    let savesMoney = (incomeInput * saveMoneyInput) / 100;
    const savingAmount = document.getElementById('saving-amount');
    let remainingBalance = document.getElementById('remaining-balance');
    // save money part error handling
    if (isNaN(saveMoneyInput)) {
        return Swal.fire({
            icon: "error",
            title: "‡¶ï‡¶ø‡¶∞‡ßá...",
            html: "‡¶π‡¶ø‡¶∏‡¶æ‡¶¨ ‡¶®‡¶æ ‡¶ï‡¶∞‡ßá ‡¶Ü‡¶ó‡ßá‡¶á ‡¶∏‡ßá‡¶≠‡¶ø‡¶Ç‡¶∏ ‡¶¨‡ßá‡¶∞ ‡¶ï‡¶∞‡¶§‡ßá ‡¶ö‡¶æ‡¶á‡¶õ‡¶ø‡¶∏?üòÜ",
          });
    }
    else if (savesMoney > parseFloat(balance.innerText)) {
        return Swal.fire({
            icon: "error",
            html: "‡¶∏‡ßá‡¶≠‡¶ø‡¶Ç‡¶∏ ‡¶ï‡¶∞‡¶æ‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø ‡¶™‡¶∞‡ßç‡¶Ø‡¶æ‡¶™‡ßç‡¶§ ‡¶™‡¶∞‡¶ø‡¶Æ‡¶æ‡¶£ ‡¶ü‡¶æ‡¶ï‡¶æ ‡¶®‡ßá‡¶á",
          });
    }
    else if ((saveMoneyInput) < 0) {
        return Swal.fire({
            icon: "error",
            html: "<b>‡¶™‡¶æ‡¶∞‡ßç‡¶∏‡ßá‡¶®‡ßç‡¶ü‡ßá‡¶∏‡ßá‡¶∞</b> ‡¶™‡¶∞‡¶ø‡¶Æ‡¶æ‡¶£ ‡¶ï‡¶ø ‡¶®‡ßá‡¶ó‡ßá‡¶ü‡¶ø‡¶≠ ‡¶π‡ßü?",
          });
    } else {
        savingAmount.innerText = savesMoney;
        remainingBalance.innerText = parseFloat(balance.innerText) - savesMoney;
    }
}

let btnClear = document.getElementById('reset-btn');
let inputs = document.querySelectorAll('input');
let amounts = document.querySelectorAll('.amount');
btnClear.addEventListener('click', () => {
    inputs.forEach(input =>  input.value = '');
    amounts.forEach(amount => amount.innerText = '00');
});
